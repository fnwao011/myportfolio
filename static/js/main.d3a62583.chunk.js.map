{"version":3,"sources":["Navbar.js","Hero.js","About.js","Projects.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","styled","div","Logo","a","Hamburger","Menu","isOpen","MenuLink","Navbar","useState","setIsOpen","onClick","document","querySelector","scrollIntoView","behavior","block","Container","InnerWrapper","Title","h1","NiceButton","Hero","class","Left","Right","BodyText","p","ImageWrapper","ContentWrapper","Profile","img","ResumeBtn","About","id","className","options","max","width","height","src","alt","href","target","ProjectContainer","TextContainer","SubTitle","h2","TextBody","ImgContainer","ProjectImage","CodeButton","Projects","h3","Footer","App","left","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d3a62583.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    return (\n        <Nav>\n            <Logo> FNWAOHA <span>{'/>'}</span> </Logo>\n            <Hamburger onClick={() => setIsOpen(!isOpen)}>\n                <span></span>\n                <span></span>\n                <span></span>\n            </Hamburger>\n            <Menu isOpen={isOpen}>\n\n                <MenuLink onClick={() => {\n                    const anchor = document.querySelector('#about')\n                    anchor.scrollIntoView({ behavior: 'smooth', block: 'center' })\n                }}>About Me</MenuLink>\n                <MenuLink onClick={() => {\n                    const anchor = document.querySelector('#projects')\n                    anchor.scrollIntoView({ behavior: 'smooth', block: 'start' })\n                }}>Projects</MenuLink>\n\n            </Menu>\n        </Nav>\n    );\n}\n\nconst Nav = styled.div`\n    padding:0 2rem;\n    display: flex;\n    justify-content:space-between;\n    align-items: center;\n    flex-wrap:wrap;\n    background:white;\n \n    \n\n`\nconst Logo = styled.a`\n    padding: 1rem 0;\n     text-decoration:none;\n     font-weight:500;\n    color:#7b7fda;\n\n    span{\n        font-weight:700;\n        color:#3CB371;\n        font-size:1.3rem;\n    }\n\n`\nconst Hamburger = styled.div`\n    display:none;\n    flex-direction:column;\n    cursor:pointer;\n\n    span{\n        height:2px;\n        width:25px;\n        background:#7b7fda;\n        margin-bottom: 4px;\n        border-radius:5px;\n    }\n\n    @media(max-width:768px){\n        display:flex\n    }\n\n`\nconst Menu = styled.div`\ndisplay:flex;\njustify-content: space-between;\nposition:relative;\nalign-items: center;\n\n@media(max-width:768px){\n    overflow:hidden;\n    flex-direction:column;\n    width:100%;\n    max-height: ${({ isOpen }) => isOpen ? \"300px\" : \"0\"};\n    transition:max-height 0.3s ease-in;\n    \n}\n\n`\nconst MenuLink = styled.a`\n    padding: 1rem 3rem;\n    cursor: pointer;\n    text-align: center;\n    text-decoration: none;\n    //font-weight: 500;\n    font-size:0.9 rem;\n    color:#3CB371;\n    transition:all 0.3 ease-in;\n\n    &:hover{\n        color:#7b7fda\n    }\n\n`\n\nexport default Navbar","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst Hero = () => {\n    return (\n        <div class='hero'>\n            <Container>\n                <InnerWrapper>\n                    <Title>Hi! My name is <span>Fabian Nwaoha</span>\n                        <br />\n                        I am a <span>Junior Developer</span>\n                    </Title>\n                    <NiceButton onClick={() => {\n                        const anchor = document.querySelector('#about')\n                        anchor.scrollIntoView({ behavior: 'smooth', block: 'center' })\n                    }}>Learn More</NiceButton>\n\n                </InnerWrapper>\n\n\n            </Container>\n        </div>\n    );\n}\n\nconst Container = styled.div`\n    min-height: 100vh;\n    height: 100vh;\n    display: flex;\n    align-items:center;\n    justify-content:center;\n    flex-direction:column;\n    flex-wrap:wrap;\n    \n`\nconst InnerWrapper = styled.div`\n    display:flex;\n    align-items:center;\n    flex-direction:column;\n    justify-content:center;\n    flex-wrap:wrap;\n    \n\n`\n\nconst Title = styled.h1`\n    font-size: 3.5rem;\n    font-weight: 700;\n    color:#7b7fda;\n    text-align: center;\n    margin-bottom:2.5rem;;\n    span{\n        color: #3CB371;\n    }\n  \n    @media(max-width:768px){\n        font-size:2rem;\n    }\n\n    @media(max-width:992px){\n        font-size:3rem;\n    }\n    \n`\n\nconst NiceButton = styled.a`\n    background-color: #7b7fda;\n    color:white;\n    border: 1px solid #7b7fda;\n    border-radius: 10px;\n    display:inline-block;\n    padding: 15px 35px;\n    text-decoration: none;\n    \n    transition: background-color 200ms ease-in-out;\n    font-weight:700;\n    margin-bottom:7rem;\n\n    cursor:pointer;\n\n    &:hover{\n        background-color: #3CB371;\n        color:white;\n    }\n\n\n`\n\nexport default Hero","import React from 'react';\nimport styled from 'styled-components';\nimport Tilt from 'react-tilt';\n\n\nconst About = () => {\n    return (\n        <div id='about' class='about'>\n            <Container>\n                <Title>\n                    ABOUT ME\n                </Title>\n                <InnerWrapper>\n                    <Left>\n                        <ImageWrapper>\n                            <Tilt className=\"Tilt\" options={{ max: 50 }} >\n                                <Profile width='275' height='183' src='/profile.jpg' alt='profile'></Profile>\n                            </Tilt>\n\n                        </ImageWrapper>\n                    </Left>\n\n                    <Right>\n                        <BodyText>\n                            <ContentWrapper>\n                                Hello! My name is Fabian Nwaoha. I just finished my BSc in Computer Science at the University of Ottawa, and it was a great experience. I have been coding since high school so reading code is nothing new to me. I’ve bounced from language to language to expand my knowledge and expose myself to different types of programming concepts. When I’m not coding though, I’m either watching sports, studying, or at the gym.\n\n                            </ContentWrapper>\n                        </BodyText>\n                        <ResumeBtn href='/Engineering.pdf' target=\"_blank\">View Resume</ResumeBtn>\n                    </Right>\n                </InnerWrapper>\n\n            </Container>\n        </div>\n    );\n}\n\nconst Container = styled.div`\n    display: flex;\n    background-color:#7b7fda;\n    flex-direction:column;\n    flex-wrap:wrap;\n    -webkit-clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100%);\n  clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100%);\n  padding-bottom: 10%;\n\n  @media(max-width:768px){\n    -webkit-clip-path: none;\n    clip-path: none;\n  }\n    \n    \n \n    \n`\n\nconst InnerWrapper = styled.div`\n    display:flex;\n    margin-top:3rem;\n\n    @media(max-width:768px){\n        display:flex;\n        flex-direction:column;\n        align-items:center;\n    }\n   \n    \n`\nconst Title = styled.h1`\n    font-size:2.5rem;\n    color:white;\n    text-align:center;\n    margin-top:2rem;\n\n    @media(max-width:768px){\n        font-size:1.7rem;\n        margin-bottom:0;\n    }\n    \n`\n\nconst Left = styled.div`\n    width:50%;\n    @media(max-width:768px){\n        display:flex;\n        flex-direction:column;\n        align-items:center;\n        margin-top:auto;\n    }\n`\n\nconst Right = styled.div`\nwidth:50%;\ndisplay:flex;\nflex-direction:column;\nalign-items:center;\n@media(max-width:768px){\n        \n        width:auto;\n    }\n`\n\nconst BodyText = styled.p`\n    font-size:0.9rem;\n    color:white;\n    text-align:left;\n    padding: 0 2rem;\n\n    @media(max-width:768px){\n        text-align:center;\n    }\n    \n    \n`\nconst ImageWrapper = styled.div`\n    display: flex;\n    height: 100%;\n    align-items: center;\n    justify-content: center;\n`\n\nconst ContentWrapper = styled.div`\n  \n    display: flex;\n    height: 100%;\n    justify-content: center;\n    flex-direction: column;\n\n   \n   \n\n`\nconst Profile = styled.img`\n    padding: 1 2rem;\n    margin-left:5rem;\n\n    @media(max-width:768px){\n        padding: 0 1rem;\n        margin-left:0;\n    }\n    \n\n`\n\nconst ResumeBtn = styled.a`\n    background-color: #3CB371;\n    color:white;\n    border: 1px solid #3CB371;\n    border-radius: 10px;\n    display:inline-block;\n    text-decoration: none;\n   \n    font-weight:700;\n    padding:0.5rem 1rem;\n    \n    font-size:0.9rem;\n\n    cursor: pointer;\n\n    \n\n    &:hover{\n        transform: translateY(-0.25em);\n        box-shadow: 0 0.3rem 0.5rem -0.4rem #3CB371;\n    }\n`\n\n\n\nexport default About;","import styled from \"styled-components\";\nimport Tilt from 'react-tilt';\n\nconst Projects = () => {\n\n    return (\n        <div id='projects'>\n            <Container>\n                <Title>PROJECTS</Title>\n                <ProjectContainer>\n                    <TextContainer>\n                        <SubTitle>CLEARFACE FACIAL RECOGNITION</SubTitle>\n                        <TextBody>Facial recognition app that runs using the Clarifai API. Allows the user to signin and register, then once logged in the user may upload a picture with a face in it. Built using React, NodeJS, ExpressJS, and SQL.</TextBody>\n                        <CodeButton href='https://github.com/fnwao011/FaceRecognition' target=\"_blank\">Source Code</CodeButton>\n                    </TextContainer>\n                    <ImgContainer>\n                        <Tilt className=\"Tilt\" options={{ max: 30 }} >\n                            <ProjectImage src='/facesc.jpg' alt='Project Pic'></ProjectImage>\n                        </Tilt>\n\n                    </ImgContainer>\n\n\n                </ProjectContainer>\n\n                <ProjectContainer>\n                    <TextContainer>\n                        <SubTitle>CLINIC++</SubTitle>\n                        <TextBody>Created a walk-in clinic app that allows users to make accounts as well as clinic employees to manage patients. The app allows patients to find the nearest walk-in clinic and notify them of appointments.UI coded using XML and Android Studio, Coded backend using Java, and Managed data input and storage (database) using Firebase</TextBody>\n                        <CodeButton href='https://github.com/SEG2105-uottawa/seg2105-project-team-f19-13' target='_blank'>Source Code</CodeButton>\n                    </TextContainer>\n                    <ImgContainer>\n                        <Tilt className=\"Tilt\" options={{ max: 30 }} >\n                            <ProjectImage src='/clinicsc.jpg' alt='Project Pic'></ProjectImage>\n                        </Tilt>\n\n                    </ImgContainer>\n\n\n                </ProjectContainer>\n            </Container>\n        </div>\n    )\n}\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction: column;\n    \n`\nconst ProjectContainer = styled.div`\n    display:flex;\n    flex-direction:row;\n    margin-top:3rem;\n    justify-content: space-between;\n    align-items:center;\n    padding:0 4rem;\n    \n    @media(max-width:768px){\n        flex-direction:column;\n    }\n  \n    \n`\nconst TextContainer = styled.div`\n    display:flex;\n    flex-direction:column;\n    width:30%;\n    align-items:center;\n    @media(max-width:768px){\n        text-align: center;\n        justify-content:center;\n        width:auto;\n    }\n\n   \n`\n\nconst SubTitle = styled.h2`\n    font-size:1.5rem;\n    color:#7b7fda;\n    text-align:center;\n    padding:1rem 2rem;\n    margin-bottom:0;\n    \n`\nconst TextBody = styled.p`\n    font-size:0.9rem;\n    color:#301934;\n    text-align:left;\n    padding: 0 2rem;\n    line-height:1.5;\n    margin-top:0;\n`\n\nconst ImgContainer = styled.div`\n   // background-color:red;\n    width:60%;\n    \n`\nconst ProjectImage = styled.img`\n    //padding: 1 2rem;\n    //margin-left:5rem;\n    width: 100%;\n    //height: auto;\n    object-fit: cover;\n    \n    \n`\n\nconst CodeButton = styled.a`\n    background-color: #3CB371;\n    color:white;\n    border: 1px solid #3CB371;\n    border-radius: 10px;\n    display:inline-block;\n    text-decoration: none;\n    font-weight:700;\n    padding:0.5rem 1rem;\n    font-size:0.9rem;\n    width:30%;\n    cursor: pointer;\n    @media(max-width:768px){\n        margin-bottom:1rem;\n    }\n\n    &:hover{\n        background-color:#7b7fda;\n    }\n`\n\nconst Title = styled.h1`\n    font-size:2.5rem;\n    color:#7b7fda;\n    text-align:center;\n    margin-top:1.5rem;\n`\n\nexport default Projects;","import styled from \"styled-components\";\n\nconst Footer = () => {\n    return (\n        <Container>\n            <SubTitle>FNWAOHA{'/>'}</SubTitle>\n            <TextBody>fnwao011@uottawa.ca</TextBody>\n            <hr />\n            <TextBody>Thank You!</TextBody>\n        </Container>\n    );\n}\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    background-color:#3CB371;\n    margin-top:7rem;\n    -webkit-clip-path: polygon(0 15vh, 100% 0, 100% 100%, 0 100%);\n  clip-path: polygon(0 15vh, 100% 0, 100% 100%, 0 100%);\n  padding: 7rem 0 5rem 0;\n  height:50%;\n\n  hr{\n    margin: 1rem auto;\n    border: 0;\n    width: 50%;\n    border-top: 2px solid white;\n  }\n`\nconst SubTitle = styled.h3`\n    font-size:1.1rem;\n    color:white;\n    text-align:center;\n    \n    \n`\nconst TextBody = styled.p`\n    font-size:0.9rem;\n    color:white;\n    margin-top:0;\n    line-height:1;\n    \n`\n\nexport default Footer;","import React, { Fragment } from 'react';\nimport styled from 'styled-components'\nimport Navbar from './Navbar';\nimport Hero from './Hero'\nimport About from './About'\nimport Projects from './Projects';\nimport Footer from './Footer';\nimport Slide from 'react-reveal/Slide'\nimport Fade from 'react-reveal/Fade'\n\nconst App = () => {\n  return (\n\n    <div>\n\n\n      <Container>\n        <Navbar />\n        <Slide left>\n          <Hero />\n        </Slide>\n        <Fade >\n          <About />\n          <Projects />\n        </Fade>\n        <Footer />\n      </Container>\n\n\n\n    </div>\n\n\n  );\n}\n\nconst Container = styled.div`\n    height: 100vh;\n    display:flex;\n    flex-direction:column;\n    \n`;\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}